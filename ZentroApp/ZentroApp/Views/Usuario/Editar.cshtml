@model ZentroApp.Models.Usuario

@{
    ViewBag.Title = "Editar Usuario";
}

<div class="container-fluid text-light min-vh-100 py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card bg-secondary border-dark">
                <div class="card-header bg-warning text-dark">
                    <h4 class="mb-0">
                        <i class="fas fa-user-edit"></i> Editar Usuario: @Model.Username
                    </h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Editar", "Usuario", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id_usuario)

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Username, "Nombre de Usuario", new { @class = "form-label text-warning" })
                                    @Html.TextBoxFor(model => model.Username, new { @class = "form-control bg-dark text-light border-secondary", placeholder = "Ingrese el username", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger small" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Correo, "Correo Electrónico", new { @class = "form-label text-warning" })
                                    @Html.TextBoxFor(model => model.Correo, new { @class = "form-control bg-dark text-light border-secondary", @type = "email", placeholder = "ejemplo@correo.com", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger small" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Nombre, "Nombre", new { @class = "form-label text-warning" })
                                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control bg-dark text-light border-secondary", placeholder = "Nombre", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger small" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Apellido, "Apellido", new { @class = "form-label text-warning" })
                                    @Html.TextBoxFor(model => model.Apellido, new { @class = "form-control bg-dark text-light border-secondary", placeholder = "Apellido", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger small" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Password, "Contraseña", new { @class = "form-label text-warning" })
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control bg-dark text-light border-secondary", placeholder = "••••••••", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger small" })
                                    <small class="text-muted">Deje en blanco si no desea cambiar la contraseña</small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Id_tipousuario, "Tipo de Usuario", new { @class = "form-label text-warning" })
                                    @Html.DropDownListFor(model => model.Id_tipousuario, ViewBag.Id_tipousuario as SelectList, "-- Seleccionar Tipo --", new { @class = "form-select bg-dark text-light border-secondary", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Id_tipousuario, "", new { @class = "text-danger small" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Estado, "Estado", new { @class = "form-label text-warning" })
                                    @Html.DropDownListFor(model => model.Estado,
                                        new List<SelectListItem> {
                                            new SelectListItem { Text = "Activo", Value = "A", Selected = Model.Estado == "A" },
                                            new SelectListItem { Text = "Inactivo", Value = "I", Selected = Model.Estado == "I" }
                                        },
                                        new { @class = "form-select bg-dark text-light border-secondary" })
                                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger small" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Fecha_creacion, "Fecha de Creación", new { @class = "form-label text-warning" })
                                    @Html.TextBoxFor(model => model.Fecha_creacion, "{0:yyyy-MM-ddTHH:mm}", new { @class = "form-control bg-dark text-light border-secondary", @type = "datetime-local" })
                                    @Html.ValidationMessageFor(model => model.Fecha_creacion, "", new { @class = "text-danger small" })
                                </div>
                            </div>
                        </div>

                        <div class="alert alert-info bg-primary border-primary">
                            <i class="fas fa-info-circle"></i>
                            <strong>Usuario ID:</strong> @Model.Id_usuario |
                            <strong>Creado:</strong> @Model.Fecha_creacion.ToString("dd/MM/yyyy HH:mm")
                        </div>

                        <div class="row mt-4">
                            <div class="col-12">
                                <div class="d-flex justify-content-between">
                                    <a href="@Url.Action("Index")" class="btn btn-secondary">
                                        <i class="fas fa-arrow-left"></i> Cancelar
                                    </a>
                                    <div>
                                        <a href="@Url.Action("Detalle", new { id = Model.Id_usuario })" class="btn btn-info me-2">
                                            <i class="fas fa-eye"></i> Ver Detalles
                                        </a>
                                        <button type="submit" class="btn btn-warning">
                                            <i class="fas fa-save"></i> Actualizar Usuario
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="card bg-danger border-danger mt-3">
                    <div class="card-body">
                        <h6 class="text-white">
                            <i class="fas fa-exclamation-triangle"></i> Errores de validación:
                        </h6>
                        @Html.ValidationSummary(false, "", new { @class = "text-white mb-0" })
                    </div>
                </div>
            }
        </div>
    </div>
</div>


